<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<freecol-specification>

  <building-types>

    <building-type>
      <building-level name="colopedia.buildings.name.TownHall" hammers-required="0" tools-required="0" population-required="1" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.CarpenterHouse" hammers-required="0"  tools-required="0" population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.LumberMill"     hammers-required="52" tools-required="0" population-required="3" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.BlacksmithHouse" hammers-required="0"   tools-required="0"   population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.BlacksmithShop"  hammers-required="64"  tools-required="20"  population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.IronWorks"       hammers-required="240" tools-required="100" population-required="8" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.TobacconistHouse" hammers-required="0"   tools-required="0"   population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.TobacconistShop"  hammers-required="64"  tools-required="20"  population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.CigarFactory"     hammers-required="160" tools-required="100" population-required="8" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.WeaverHouse" hammers-required="0"   tools-required="0"   population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.WeaverShop"  hammers-required="64"  tools-required="20"  population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.TextileMill" hammers-required="160" tools-required="100" population-required="8" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.DistillerHouse" hammers-required="0"   tools-required="0"   population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.RumDistillery"  hammers-required="64"  tools-required="20"  population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.RumFactory"     hammers-required="160" tools-required="100" population-required="8" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.FurTraderHouse" hammers-required="0"   tools-required="0"   population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.FurTradingPost" hammers-required="56"  tools-required="20"  population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.FurFactory"     hammers-required="160" tools-required="100" population-required="6" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.Schoolhouse" hammers-required="64"  tools-required="0"   population-required="4" workplaces="1" />
      <building-level name="colopedia.buildings.name.College"     hammers-required="160" tools-required="50"  population-required="8" workplaces="2" />
      <building-level name="colopedia.buildings.name.University"  hammers-required="200" tools-required="100" population-required="10" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.Armory"   hammers-required="52"  tools-required="0"   population-required="1" workplaces="3" />
      <building-level name="colopedia.buildings.name.Magazine" hammers-required="120" tools-required="50"  population-required="8" workplaces="3" />
      <building-level name="colopedia.buildings.name.Arsenal"  hammers-required="240" tools-required="100" population-required="8" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.Church"    hammers-required="64"  tools-required="0"   population-required="3" workplaces="1" />
      <building-level name="colopedia.buildings.name.Cathedral" hammers-required="176" tools-required="100" population-required="8" workplaces="3" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.Stockade" hammers-required="64"  tools-required="0"   population-required="3" workplaces="0" />
      <building-level name="colopedia.buildings.name.Fort"     hammers-required="120" tools-required="100" population-required="3" workplaces="0" />
      <building-level name="colopedia.buildings.name.Fortress" hammers-required="320" tools-required="200" population-required="8" workplaces="0" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.Warehouse"          hammers-required="80" tools-required="0"  population-required="1" workplaces="0" />
      <building-level name="colopedia.buildings.name.WarehouseExpansion" hammers-required="80" tools-required="20" population-required="1" workplaces="0" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.Stables" hammers-required="64" tools-required="0" population-required="1" workplaces="0" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.Docks"    hammers-required="52"  tools-required="0"   population-required="1" workplaces="0" />
      <building-level name="colopedia.buildings.name.Drydock"  hammers-required="80"  tools-required="50"  population-required="4" workplaces="0" />
      <building-level name="colopedia.buildings.name.Shipyard" hammers-required="240" tools-required="100" population-required="8" workplaces="0" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.PrintingPress" hammers-required="52"  tools-required="20" population-required="1" workplaces="0" />
      <building-level name="colopedia.buildings.name.Newspaper"     hammers-required="120" tools-required="50" population-required="4" workplaces="0" />
    </building-type>

    <building-type>
      <building-level name="colopedia.buildings.name.CustomHouse" hammers-required="160" tools-required="50" population-required="1" workplaces="0" />
    </building-type>

  </building-types>

  <!-- types of goods.  an element must be defined before it is referenced -->
  <goods-types>
    <goods-type id="model.goods.Food" art="goods/food.png" is-farmed="yes" ignore-limit="yes" is-food="yes">
      <market initial-amount="10000" initial-price="1"  price-difference="7"/>
    </goods-type>
    <goods-type id="model.goods.Sugar" art="goods/sugar.png" is-farmed="yes">
      <market initial-amount="1500"  initial-price="2"  price-difference="4"/>
    </goods-type>
    <goods-type id="model.goods.Tobacco" art="goods/tobacco.png" is-farmed="yes">
      <market initial-amount="1500"  initial-price="2"  price-difference="4"/>
    </goods-type>
    <goods-type id="model.goods.Cotton" art="goods/cotton.png" is-farmed="yes">
      <market initial-amount="1500"  initial-price="2"  price-difference="4"/>
    </goods-type>
    <goods-type id="model.goods.Furs" art="goods/furs.png" is-farmed="yes">
      <market initial-amount="1500"  initial-price="2"  price-difference="4"/>
    </goods-type>
    <goods-type id="model.goods.Lumber" art="goods/lumber.png" is-farmed="yes">
      <market initial-amount="3000"  initial-price="1"  price-difference="5"/>
    </goods-type>
    <goods-type id="model.goods.Ore" art="goods/ore.png" is-farmed="yes">
      <market initial-amount="2000"  initial-price="4"  price-difference="3"/>
    </goods-type>
    <goods-type id="model.goods.Silver" art="goods/silver.png" is-farmed="yes">
      <market initial-amount="500"   initial-price="16" price-difference="1"/>
    </goods-type>
    <goods-type id="model.goods.Horses" art="goods/horses.png" is-farmed="no" made-from="food">
      <market initial-amount="1000"  initial-price="1"  price-difference="1"/>
    </goods-type>
    <goods-type id="model.goods.Rum" art="goods/rum.png" is-farmed="no" made-from="sugar">
      <market initial-amount="1000"  initial-price="10" price-difference="1"/>
    </goods-type>
    <goods-type id="model.goods.Cigars" art="goods/cigars.png" is-farmed="no" made-from="tobacco">
      <market initial-amount="1000"  initial-price="10" price-difference="1"/>
    </goods-type>
    <goods-type id="model.goods.Cloth" art="goods/cloth.png" is-farmed="no" made-from="cotton">
      <market initial-amount="1000"  initial-price="10" price-difference="1"/>
    </goods-type>
    <goods-type id="model.goods.Coats" art="goods/coats.png" is-farmed="no" made-from="furs">
      <market initial-amount="1000"  initial-price="10" price-difference="1"/>
    </goods-type>
    <goods-type id="model.goods.TradeGoods" art="goods/tradeGoods.png" is-farmed="no">
      <market initial-amount="1000"  initial-price="1"  price-difference="1"/>
    </goods-type>
    <goods-type id="model.goods.Tools" art="goods/tools.png" is-farmed="no" made-from="ore">
      <market initial-amount="500"   initial-price="1"  price-difference="1"/>
    </goods-type>
    <goods-type id="model.goods.Muskets" art="goods/muskets.png" is-farmed="no" made-from="tools">
      <market initial-amount="500"   initial-price="1"  price-difference="1"/>
    </goods-type>
    <goods-type id="model.goods.Fish" art="goods/fish.png" is-farmed="yes" storable="no" stored-as="model.goods.food" />
    <goods-type id="model.goods.Bells" art="goods/bells.png" is-farmed="no" storable="no"/>
    <goods-type id="model.goods.Crosses" art="goods/crosses.png" is-farmed="no" storable="no"/>
    <goods-type id="model.goods.Hammers" art="goods/hammers.png" is-farmed="no" made-from="lumber" storable="no"/>
  </goods-types>

  <resource-types>
    <resource-type id="model.resource.Game" art="bonus/furs.png">
      <production-bonus goods-type="model.goods.Food" bonus="2"/>
      <!-- in colonization game gives 2 food (4 for expert farmer) -->
      <production-bonus goods-type="model.goods.Furs" bonus="2"/>
    </resource-type>
    <resource-type id="model.resource.Minerals" art="bonus/ore.png" minimum-value="40" maximum-value="400">
      <production-bonus goods-type="model.goods.Ore" bonus="3"/>
    </resource-type>
    <resource-type id="model.resource.Ore" art="bonus/ore.png" minimum-value="40" maximum-value="4000">
      <production-bonus goods-type="model.goods.Ore" bonus="2"/>
    </resource-type>
    <resource-type id="model.resource.Silver" art="bonus/silver.png" minimum-value="40" maximum-value="800">
      <production-bonus goods-type="model.goods.Silver" bonus="2"/>
    </resource-type>
    <resource-type id="model.resource.Lumber" art="bonus/lumber.png">
      <production-bonus goods-type="model.goods.Lumber" bonus="4"/>
    </resource-type>
    <resource-type id="model.resource.Furs" art="bonus/furs.png">
      <production-bonus goods-type="model.goods.Furs" bonus="3"/>
    </resource-type>
    <resource-type id="model.resource.Tobacco" art="bonus/tobacco.png">
      <production-bonus goods-type="model.goods.Tobacco" factor="2"/>
    </resource-type>
    <resource-type id="model.resource.Sugar" art="bonus/sugar.png">
      <production-bonus goods-type="model.goods.Sugar" factor="2"/>
    </resource-type>
    <resource-type id="model.resource.Cotton" art="bonus/cotton.png">
      <production-bonus goods-type="model.goods.Cotton" factor="2"/>
    </resource-type>
    <resource-type id="model.resource.Oasis" art="bonus/grain.png">
      <production-bonus goods-type="model.goods.Food" bonus="2"/>
      <!-- in colonization game gives 2 food (4 for expert farmer) -->
    </resource-type>
    <resource-type id="model.resource.Grain" art="bonus/grain.png">
      <production-bonus goods-type="model.goods.Food" bonus="2"/>
      <!-- in colonization game gives 2 food (4 for expert farmer) -->
    </resource-type>
    <resource-type id="model.resource.Fish" art="bonus/fish.png">
      <production-bonus goods-type="model.goods.Fish" bonus="3"/>
      <!-- in colonization game gives 3 food (6 for expert fisherman) -->
    </resource-type>
  </resource-types>

  <!-- Structure for tile-types
    Notes:
    Parent options: ref, name, basic-move-cost, basic-work-turns, sail-to-europe
    Children: art, gen, skirmish, production, resource
    art child options: basic, overlay, coast
    - all tiles must have at least basic. overlay will be drawn after all the base tiles are drawn
    - coast is for land tiles drawing their overlap on water tiles. if it is not defined, the normal overlap is used
    gen child options: humidity, temperature, altitude, latitude
    - all children have the format "min,max" eg. humidity="1,3" or altitude="-2,0"
    - humidity is the wetness (values of -3 to 3, default "-3,3")
    - temperature (values of -3 to 3, default "-3,3")
    - altitude (values of -3 to 3)
      - land (values 1 to 3)
      - water (values -3 to -1)
        - less negative numbers have a higher chance of appearing near shore
        - more negative numbers have a higher chance of appearing further from shore
      - undefined (default = "0,0")
        - may appear anywhere based on land/water
    - latitude (values of 0 to 3, "-1,-1" is default undefined and may appear anywhere based on land/water)
      - 0 denotes closeness to the equator / middle of the map
      - 3 denotes distance from the equator / top/bottom edge of the map
      - -1 ignores distance from the equator and may appear anywhere (same effect as "0,3")
    skirmish child options: attack-factor, defence-factor
    - attack-factor is a percentage modifier for the attacker (default = 100)
    - defence-factor is a percentage modifier for the defender (default = 100)
    production if any must have the following structure:
      <production goods-type="model.goods.goodname" value="X"
    resource if any must have the following structure:
      <resource type="model.resource.resourcename" probability="X"
      - X is a relative probability, not necessarily a percentage value    
  -->
  <tile-types>
<!--
    <tile-type    ref="tile.unexplored"      name="model.tile.unexplored"
                    basic-move-cost="3" basic-work-turns="-1">
      <art basic="model.tile.unexplored">
    </tile-type>
-->
    <tile-type    id="model.tile.plains"            basic-move-cost="3" basic-work-turns="3">
      <art basic="terrain/plains/" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.50,0.12"/>
      <gen humidity="-2,2" temperature="-2,2" altitude="1,2" latitude="0,2"/>
      <production goods-type="model.goods.Food"       value="5"/>
      <production goods-type="model.goods.Cotton"     value="2"/>
      <production goods-type="model.goods.Ore"        value="1"/>
      <resource   type="model.resource.Grain"         probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.grassland"         basic-move-cost="3" basic-work-turns="3">
      <art basic="terrain/grassland/" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.50,0.12"/>
      <gen humidity="-2,2" temperature="-2,2" altitude="1,1" latitude="0,2"/>
      <production goods-type="model.goods.Food"       value="3"/>
      <production goods-type="model.goods.Tobacco"    value="3"/>
      <resource   type="model.resource.Tobacco"       probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.prairie"           basic-move-cost="3" basic-work-turns="3">
      <art basic="terrain/prairie/" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.50,0.12"/>
      <gen humidity="-2,2" temperature="-2,2" altitude="1,1" latitude="0,2"/>
      <production goods-type="model.goods.Food"       value="3"/>
      <production goods-type="model.goods.Cotton"     value="3"/>
      <resource   type="model.resource.Cotton"        probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.savannah"          basic-move-cost="3" basic-work-turns="3">
      <art basic="terrain/savannah/" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.50,0.12"/>
      <gen humidity="-2,2" temperature="-2,2" altitude="1,1" latitude="0,2"/>
      <production goods-type="model.goods.Food"       value="4"/>
      <production goods-type="model.goods.Sugar"      value="3"/>
      <resource   type="model.resource.Sugar"         probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.marsh"             basic-move-cost="6" basic-work-turns="5">
      <art basic="terrain/marsh/" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.50,0.24"/>
      <gen humidity="1,3" temperature="-1,3" altitude="2,2" latitude="0,2"/>
      <skirmish defence-factor="125"/>
      <production goods-type="model.goods.Food"       value="3"/>
      <production goods-type="model.goods.Tobacco"    value="2"/>
      <production goods-type="model.goods.Ore"        value="2"/>
      <resource   type="model.resource.Minerals"         probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.swamp"             basic-move-cost="6" basic-work-turns="7">
      <art basic="terrain/swamp/" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.50,0.24"/>
      <gen humidity="1,3" temperature="-1,3" altitude="1,1" latitude="0,2"/>
      <skirmish defence-factor="125"/>
      <production goods-type="model.goods.Food"       value="3"/>
      <production goods-type="model.goods.Sugar"      value="2"/>
      <production goods-type="model.goods.Ore"        value="2"/>
      <resource   type="model.resource.Minerals"      probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.desert"            basic-move-cost="3" basic-work-turns="3">
      <art basic="terrain/desert/" unexplored="0" coast="terrain/beach/" minimap-color="0.39,0.45,0.17"/>
      <gen humidity="-3,-1" temperature="-1,3" altitude="1,2" latitude="0,2"/>
      <production goods-type="model.goods.Food"       value="2"/>
      <production goods-type="model.goods.Cotton"     value="1"/>
      <production goods-type="model.goods.Ore"        value="2"/>
      <resource   type="model.resource.Oasis"         probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.tundra"            basic-move-cost="3" basic-work-turns="4">
      <art basic="terrain/tundra/" unexplored="0" coast="terrain/beach/" minimap-color="0.39,0.62,0.37"/>
      <gen humidity="-3,3" temperature="-3,1" altitude="1,3" latitude="1,3"/>
      <production goods-type="model.goods.Food"       value="3"/>
      <production goods-type="model.goods.Ore"        value="2"/>
      <resource   type="model.resource.Minerals"         probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.mixedForest"       basic-move-cost="6" basic-work-turns="4" is-forest="yes">
      <art basic="terrain/plains/" forest="forest/mixed.png" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.45,0.12"/>
      <gen humidity="-2,2" temperature="-2,2" altitude="1,2" latitude="0,2"/>
      <skirmish defence-factor="150"/>
      <production goods-type="model.goods.Food"       value="3"/>
      <production goods-type="model.goods.Cotton"     value="1"/>
      <production goods-type="model.goods.Furs"       value="3"/>
      <production goods-type="model.goods.Lumber"     value="6"/>
      <resource   type="model.resource.Furs"          probability="100"/>
    <!-- not in colonization
      <resource   type="model.resource.Lumber"        probability="33"/>
      <resource   type="model.resource.Game"          probability="34"/>
    -->
    </tile-type>
    <tile-type    id="model.tile.coniferForest"     basic-move-cost="6" basic-work-turns="4" is-forest="yes">
      <art basic="terrain/grassland/" forest="forest/conifer.png" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.45,0.12"/>
      <gen humidity="-2,2" temperature="-2,2" altitude="1,1" latitude="0,2"/>
      <skirmish defence-factor="150"/>
      <production goods-type="model.goods.Food"       value="2"/>
      <production goods-type="model.goods.Tobacco"    value="1"/>
      <production goods-type="model.goods.Furs"       value="2"/>
      <production goods-type="model.goods.Lumber"     value="6"/>
      <resource   type="model.resource.Lumber"        probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.broadleafForest"   basic-move-cost="6" basic-work-turns="4" is-forest="yes">
      <art basic="terrain/prairie/" forest="forest/broadleaf.png" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.45,0.12"/>
      <gen humidity="-2,2" temperature="-2,2" altitude="1,1" latitude="0,2"/>
      <skirmish defence-factor="150"/>
      <production goods-type="model.goods.Food"       value="2"/>
      <production goods-type="model.goods.Cotton"     value="1"/>
      <production goods-type="model.goods.Furs"       value="2"/>
      <production goods-type="model.goods.Lumber"     value="4"/>
      <resource   type="model.resource.Game"          probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.tropicalForest"    basic-move-cost="6" basic-work-turns="6" is-forest="yes">
      <art basic="terrain/savannah/" forest="forest/tropical.png" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.45,0.12"/>
      <skirmish defence-factor="150"/>
      <gen humidity="-2,2" temperature="-2,2" altitude="1,1" latitude="0,2"/>
      <production goods-type="model.goods.Food"       value="3"/>
      <production goods-type="model.goods.Tobacco"    value="1"/>
      <production goods-type="model.goods.Furs"       value="2"/>
      <production goods-type="model.goods.Lumber"     value="4"/>
      <resource   type="model.resource.Lumber"        probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.wetlandForest"     basic-move-cost="9" basic-work-turns="6" is-forest="yes">
      <art basic="terrain/marsh/" forest="forest/wetland.png" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.45,0.12"/>
      <gen humidity="1,3" temperature="-1,3" altitude="2,2" latitude="0,2"/>
      <skirmish defence-factor="150"/>
      <production goods-type="model.goods.Food"       value="2"/>
      <production goods-type="model.goods.Tobacco"    value="1"/>
      <production goods-type="model.goods.Furs"       value="2"/>
      <production goods-type="model.goods.Lumber"     value="4"/>
      <production goods-type="model.goods.Ore"        value="1"/>
      <resource   type="model.resource.Minerals"      probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.rainForest"        basic-move-cost="9" basic-work-turns="7" is-forest="yes">
      <art basic="terrain/swamp/" forest="forest/rain.png" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.45,0.12"/>
      <gen humidity="1,3" temperature="-1,3" altitude="1,1" latitude="0,2"/>
      <skirmish defence-factor="175"/>
      <production goods-type="model.goods.Food"       value="2"/>
      <production goods-type="model.goods.Sugar"      value="1"/>
      <production goods-type="model.goods.Furs"       value="1"/>
      <production goods-type="model.goods.Lumber"     value="4"/>
      <production goods-type="model.goods.Ore"        value="1"/>
      <resource   type="model.resource.Minerals"      probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.scrubForest"       basic-move-cost="3" basic-work-turns="4" is-forest="yes">
      <art basic="terrain/desert/" forest="forest/scrub.png" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.45,0.12"/>
      <gen humidity="-3,-1" temperature="-1,3" altitude="1,2" latitude="0,2"/>
      <skirmish defence-factor="150"/>
      <production goods-type="model.goods.Food"       value="2"/>
      <production goods-type="model.goods.Cotton"     value="1"/>
      <production goods-type="model.goods.Furs"       value="2"/>
      <production goods-type="model.goods.Lumber"     value="2"/>
      <production goods-type="model.goods.Ore"        value="1"/>
      <resource   type="model.resource.Oasis"         probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.borealForest"      basic-move-cost="6" basic-work-turns="4" is-forest="yes">
      <art basic="terrain/tundra/" forest="forest/boreal.png" unexplored="0" coast="terrain/beach/" minimap-color="0.14,0.45,0.12"/>
      <gen humidity="-3,3" temperature="-3,1" altitude="1,3" latitude="1,3"/>
      <skirmish defence-factor="150"/>
      <production goods-type="model.goods.Food"       value="2"/>
      <production goods-type="model.goods.Furs"       value="3"/>
      <production goods-type="model.goods.Lumber"     value="4"/>
      <production goods-type="model.goods.Ore"        value="1"/>
      <resource   type="model.resource.Game"          probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.hills"             basic-move-cost="6" basic-work-turns="4" no-river="yes">
      <art basic="terrain/plains/" overlay="terrain/hills/hills" unexplored="0" coast="terrain/beach/" minimap-color="0.44,0.50,0.32"/>
      <gen humidity="-3,3" temperature="-3,3" altitude="2,3" latitude="0,3"/>
      <skirmish defence-factor="200"/>
      <production goods-type="model.goods.Food"       value="2"/>
      <production goods-type="model.goods.Ore"        value="4"/>
      <resource   type="model.resource.Ore"           probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.mountains"         basic-move-cost="9" basic-work-turns="7" can-settle="no" no-river="yes">
      <art basic="terrain/plains/" overlay="terrain/mountains/mountains" unexplored="0" coast="terrain/beach/" minimap-color="0.34,0.45,0.32"/>
      <gen humidity="-3,3" temperature="-3,3" altitude="3,3" latitude="0,3"/>
      <skirmish defence-factor="250"/>
      <production goods-type="model.goods.Ore"        value="4"/>
      <production goods-type="model.goods.Silver"     value="1"/>
      <resource   type="model.resource.Silver"        probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.arctic"            basic-move-cost="6" basic-work-turns="4" can-settle="no" no-river="yes">
      <art basic="terrain/arctic/" unexplored="0" coast="terrain/beach/" minimap-color="1.00,1.00,1.00"/>
      <gen humidity="-3,3" temperature="-3,-1" altitude="1,3" latitude="2,3"/>
    </tile-type>
    <tile-type    id="model.tile.ocean"             basic-move-cost="3" basic-work-turns="4" is-water="yes">
      <art basic="terrain/ocean/" unexplored="0" minimap-color="0.00,0.00,1.00"/>
      <gen humidity="-3,3" temperature="-3,3" altitude="-2,-1" latitude="0,3"/>
      <production goods-type="model.goods.Fish"       value="2"/>
      <resource   type="model.resource.Fish"          probability="100"/>
    </tile-type>
    <tile-type    id="model.tile.highSeas"          basic-move-cost="3" basic-work-turns="4" is-water="yes" sail-to-europe="yes">
      <art basic="terrain/highSeas/" unexplored="0" minimap-color="0.00,0.00,0.80"/>
      <gen humidity="-3,3" temperature="-3,3" altitude="-3,-2" latitude="0,3"/>
      <production goods-type="model.goods.Fish"       value="4"/>
    </tile-type>
<!--
    <tile-type    ref="tile.beach"           name="model.tile.beach"
                    basic-move-cost="3" basic-work-turns="-1">
      <art basic="model.tile.beach"/>
      <gen humidity="-3,3" temperature="-3,3" altitude="0,0" latitude="0,3"/>
    </tile-type>
    <tile-type    ref="tile.forest"          name="model.tile.forest"
                    basic-move-cost="6" basic-work-turns="-1">
      <art basic="model.tile.plains"    forest="plains"/>
      <gen humidity="-3,3" temperature="-3,3" altitude="0,0" latitude="0,2"/>
    </tile-type>
-->
  </tile-types>

  <!--
  Parent options: name, add-work-turns, overlay, natural, type, required-improvement, workers="worker1,worker2,etc",
                  expended-goods-type, expended-amount, deliver-goods-type, deliver-amount
    - natural="yes" means that this improvement cannot be built, but may be present on its own
    - expended goods/amount are the 'cost' of building this improvement
    - deliver goods/amount are the instant reward that will be given to the nearby colony (eg. lumber from deforestation)
      - deliver-amount is a factor to multiply the base production of that tile to give.
  Children: type, tiles, effect, change
  type child options: id, magnitude
    - id is a string identifier, there must be a "river" and a "road" id among the tileimprovement-types
      - to get the movement-bonus, must travel from a similar 'id' to this id
    - magnitude is a number to decide overwriting,
      a similar id tileimprovement will be replaced with one with a higher magnitude
  tiles child options: all-land-tiles, all-forest-tiles, all-water-tiles, tiles="tile1,tile2,etc"
    - putting all-water-tiles="no" is redundant, but serves as a reminder
    - putting all-land-tiles="yes" all-forest-tiles="no" will result in all non-forested land tiles.
  effect child options: goods-type and value, movement-cost, movement-cost-factor
    - use goods-type & value, or goods-types & values.
    - both goods-types & values should have the same number of inputs
    - movement-cost will set the movement cost to that amount in thirds.
    - movement-cost-factor multiplies movement cost by a percentage factor (ie a value of 75 will result in a (100-75) = 25% reduction)
  change child options: from, to
  -->
  <tileimprovement-types>
    <tileimprovement-type id="model.improvement.River" natural="yes"
            add-work-turns="0">
      <type id="river" magnitude="1"/>
      <tiles all-land-tiles="yes"/>
      <effect goods-types="model.goods.Food" value="1"/>
      <effect goods-types="model.goods.Sugar" value="1"/>
      <effect goods-types="model.goods.Tobacco" value="1"/>
      <effect goods-types="model.goods.Cotton" value="1"/>
      <effect goods-types="model.goods.Furs" value="1"/>
      <effect goods-types="model.goods.Lumber" value="1"/>
      <effect goods-types="model.goods.Ore" value="1"/>
      <effect goods-types="model.goods.Silver" value="1"/>
      <effect movement-cost="1"/>
    </tileimprovement-type>
    <tileimprovement-type id="model.improvement.Road"
            add-work-turns="0" over-trees="yes"
            expended-goods-type="model.goods.Tools" expended-amount="20">
      <type id="road" magnitude="1"/>
      <tiles all-land-tiles="yes"/>
      <effect goods-types="model.goods.Furs" value="1"/>
      <effect goods-types="model.goods.Lumber" value="1"/>
      <effect goods-types="model.goods.Ore" value="1"/>
      <effect goods-types="model.goods.Silver" value="1"/>
      <effect movement-cost="1"/>
    </tileimprovement-type>
    <tileimprovement-type id="model.improvement.Plow"
            add-work-turns="2" overlay="4"
            expended-goods-type="model.goods.Tools" expended-amount="20">
      <tiles all-land-tiles="yes" all-forest-tiles="no"/>
      <effect goods-types="model.goods.Food" value="1"/>
      <effect goods-types="model.goods.Sugar" value="1"/>
      <effect goods-types="model.goods.Tobacco" value="1"/>
      <effect goods-types="model.goods.Cotton" value="1"/>
    </tileimprovement-type>
    <tileimprovement-type id="model.improvement.ClearForest" add-work-turns="2"
            expended-goods-type="model.goods.Tools" expended-amount="20"
            deliver-goods-type="model.goods.Lumber" deliver-amount="5">
      <tiles all-forest-tiles="yes"/>
      <change from="model.tile.mixedForest"     to="model.tile.plains"/>
      <change from="model.tile.coniferForest"   to="model.tile.grassland"/>
      <change from="model.tile.broadleafForest" to="model.tile.prairie"/>
      <change from="model.tile.tropicalForest"  to="model.tile.savannah"/>
      <change from="model.tile.wetlandForest"   to="model.tile.marsh"/>
      <change from="model.tile.rainForest"      to="model.tile.swamp"/>
      <change from="model.tile.scrubForest"     to="model.tile.desert"/>
      <change from="model.tile.borealForest"    to="model.tile.tundra"/>
    </tileimprovement-type>
  </tileimprovement-types>

  <!--
  For each improvement-action, there is a single accelerator. So in the event that two improvement-types
    share the same accelerator, like Plow and RemoveForest. The valid TileTypes for the actions are
    referenced from the Improvement List above, so the onus is on the person modifying to declare the
    previous section.
  All actions sharing an accelerator should be mutually exclusive, but the first action takes priority
    during checking. If the first action cannot be performed, the second and subsequent actions will be
    considered.
  Structure:
  <improvementaction-type id="plowAction" accelerator='P'>
    <action tileimprovement-type="model.improvement.Plow" name="model.improvement.Plow.action" image-id="5"/>
    <action tileimprovement-type="model.improvement.ClearForest" name="model.improvement.ClearForest.action" image-id="4"/>
  </improvementaction-type>
  Notes:
    image-id is the reference for the unit-button index in ImageLibrary.java
    Keep the ids in alphabetical order. Not mandatory, but neater.
  -->
  <improvementaction-types>
    <improvementaction-type id="impPlowAction" accelerator='P'>
      <action tileimprovement-type="model.improvement.Plow" name="model.improvement.Plow.action" image-id="5"/>
      <action tileimprovement-type="model.improvement.ClearForest" name="model.improvement.ClearForest.action" image-id="4"/>
    </improvementaction-type>
    <improvementaction-type id="impRoadAction" accelerator='R'>
      <action tileimprovement-type="model.improvement.Road" name="model.improvement.Road.action" image-id="6"/>
    </improvementaction-type>
  </improvementaction-types>

  <unit-types>
    <unit-type name="model.unit.freeColonist"         offence="0"  defence="1" movement="3" lineOfSight="1"
               skill="0" promotion="model.unit.veteranSoldier" recruitProbability="20" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <ability id="model.ability.bornInColony" value="yes"/>
      <ability id="model.ability.foundInLostCity" value="yes"/>
      <upgrade unit="model.unit.expertFarmer" turnsToLearn="4" learnFromNatives="yes" learnFromExperience="yes"/>
      <upgrade unit="model.unit.expertFisherman" turnsToLearn="4" learnFromNatives="yes" learnFromExperience="yes"/>
      <upgrade unit="model.unit.expertFurTrapper" turnsToLearn="4" learnFromNatives="yes" learnFromExperience="yes"/>
      <upgrade unit="model.unit.expertSilverMiner" turnsToLearn="4" learnFromNatives="yes" learnFromExperience="yes"/>
      <upgrade unit="model.unit.expertLumberJack" turnsToLearn="4" learnFromNatives="yes" learnFromExperience="yes"/>
      <upgrade unit="model.unit.expertOreMiner" turnsToLearn="4" learnFromNatives="yes" learnFromExperience="yes"/>
      <upgrade unit="model.unit.masterSugarPlanter" turnsToLearn="6" learnFromNatives="yes" learnFromExperience="yes"/>
      <upgrade unit="model.unit.masterCottonPlanter" turnsToLearn="6" learnFromNatives="yes" learnFromExperience="yes"/>
      <upgrade unit="model.unit.masterTobaccoPlanter" turnsToLearn="6" learnFromNatives="yes" learnFromExperience="yes"/>
      <upgrade unit="model.unit.firebrandPreacher" turnsToLearn="8"/>
      <upgrade unit="model.unit.elderStatesman" turnsToLearn="8"/>
      <upgrade unit="model.unit.masterCarpenter" turnsToLearn="4"/>
      <upgrade unit="model.unit.masterDistiller" turnsToLearn="6"/>
      <upgrade unit="model.unit.masterWeaver" turnsToLearn="6"/>
      <upgrade unit="model.unit.masterTobacconist" turnsToLearn="6"/>
      <upgrade unit="model.unit.masterFurTrader" turnsToLearn="6"/>
      <upgrade unit="model.unit.masterBlacksmith" turnsToLearn="6"/>
      <upgrade unit="model.unit.masterGunsmith" turnsToLearn="6"/>
      <upgrade unit="model.unit.seasonedScout" turnsToLearn="4" learnFromNatives="yes" learnInLostCity="yes"/>
      <upgrade unit="model.unit.hardyPioneer" turnsToLearn="4"/>
      <upgrade unit="model.unit.veteranSoldier" turnsToLearn="6"/>
      <upgrade unit="model.unit.jesuitMissionary" turnsToLearn="8"/>
    </unit-type>
    <unit-type name="model.unit.expertFarmer"         offence="0"  defence="1" movement="3" lineOfSight="1" price="1100" 
               skill="1" recruitProbability="1" expert-production="model.goods.Food" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Food" bonus="2"/>
    </unit-type>
    <unit-type name="model.unit.expertFisherman"      offence="0"  defence="1" movement="3" lineOfSight="1" price="1000" 
               skill="1" recruitProbability="1" expert-production="model.goods.Fish" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Fish" bonus="2"/>
    </unit-type>
    <unit-type name="model.unit.expertFurTrapper"     offence="0"  defence="1" movement="3" lineOfSight="1"               
               skill="1"  expert-production="model.goods.Furs" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Furs" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.expertSilverMiner"    offence="0"  defence="1" movement="3" lineOfSight="1" price="900"  
               skill="1" recruitProbability="1" expert-production="model.goods.Silver" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Silver" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.expertLumberJack"     offence="0"  defence="1" movement="3" lineOfSight="1" price="700"  
               skill="1" recruitProbability="1" expert-production="model.goods.Lumber" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Lumber" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.expertOreMiner"       offence="0"  defence="1" movement="3" lineOfSight="1" price="600"  
               skill="1" recruitProbability="1" expert-production="model.goods.Ore" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Ore" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterSugarPlanter"   offence="0"  defence="1" movement="3" lineOfSight="1"               
               skill="2"  expert-production="model.goods.Sugar" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Sugar" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterCottonPlanter"  offence="0"  defence="1" movement="3" lineOfSight="1"               
               skill="2"  expert-production="model.goods.Cotton" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Cotton" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterTobaccoPlanter" offence="0"  defence="1" movement="3" lineOfSight="1"               
               skill="2"  expert-production="model.goods.Tobacco" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Tobacco" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.firebrandPreacher"    offence="0"  defence="1" movement="3" lineOfSight="1" price="1500" 
               skill="3" recruitProbability="1" expert-production="model.goods.Crosses" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Crosses" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.elderStatesman"       offence="0"  defence="1" movement="3" lineOfSight="1" price="1900" 
               skill="3" recruitProbability="1" expert-production="model.goods.Bells" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Bells" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterCarpenter"      offence="0"  defence="1" movement="3" lineOfSight="1" price="1000" 
               skill="1" recruitProbability="1" expert-production="model.goods.Hammers" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Hammers" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterDistiller"      offence="0"  defence="1" movement="3" lineOfSight="1" price="1100" 
               skill="2" recruitProbability="1" expert-production="model.goods.Rum" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Rum" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterWeaver"         offence="0"  defence="1" movement="3" lineOfSight="1" price="1300" 
               skill="2" recruitProbability="1" expert-production="model.goods.Cloth" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Cloth" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterTobacconist"    offence="0"  defence="1" movement="3" lineOfSight="1" price="1200" 
               skill="2" recruitProbability="1" expert-production="model.goods.Cigars" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Cigars" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterFurTrader"      offence="0"  defence="1" movement="3" lineOfSight="1" price="950"  
               skill="2" recruitProbability="1" expert-production="model.goods.Coats" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Coats" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterBlacksmith"     offence="0"  defence="1" movement="3" lineOfSight="1" price="1050" 
               skill="2" recruitProbability="1" expert-production="model.goods.Tools" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Tools" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.masterGunsmith"       offence="0"  defence="1" movement="3" lineOfSight="1" price="850"  
               skill="2" recruitProbability="1" expert-production="model.goods.Muskets" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <production-bonus goods-type="model.goods.Muskets" factor="2"/>
    </unit-type>
    <unit-type name="model.unit.seasonedScout"        offence="0"  defence="1" movement="3" lineOfSight="1"               
               skill="1" recruitProbability="1" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <ability id="model.ability.expertScout" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.hardyPioneer"         offence="0"  defence="1" movement="3" lineOfSight="1" price="1100" 
               skill="1" recruitProbability="1" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <ability id="model.ability.expertPioneer" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.veteranSoldier"       offence="0"  defence="1" movement="3" lineOfSight="1" price="2000" 
               skill="2" recruitProbability="1" promotion="model.unit.colonialRegular" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <ability id="model.ability.expertSoldier" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.jesuitMissionary"     offence="0"  defence="1" movement="3" lineOfSight="1" price="1400" 
               skill="3" recruitProbability="1" clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <ability id="model.ability.expertMissionary" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.indenturedServant"    offence="0"  defence="1" movement="3" lineOfSight="1"              
               skill="-1" recruitProbability="20" promotion="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <upgrade unit="model.unit.freeColonist" turnsToLearn="4"/>
      <upgrade unit="model.unit.expertFarmer" learnFromNatives="yes"/>
      <upgrade unit="model.unit.expertFisherman" learnFromNatives="yes"/>
      <upgrade unit="model.unit.expertFurTrapper" learnFromNatives="yes"/>
      <upgrade unit="model.unit.expertSilverMiner" learnFromNatives="yes"/>
      <upgrade unit="model.unit.expertLumberJack" learnFromNatives="yes"/>
      <upgrade unit="model.unit.expertOreMiner" learnFromNatives="yes"/>
      <upgrade unit="model.unit.masterSugarPlanter" learnFromNatives="yes"/>
      <upgrade unit="model.unit.masterCottonPlanter" learnFromNatives="yes"/>
      <upgrade unit="model.unit.masterTobaccoPlanter" learnFromNatives="yes"/>
      <upgrade unit="model.unit.seasonedScout" learnFromNatives="yes" learnInLostCity="yes"/>
      <production-bonus goods-type="model.goods.Rum" bonus="-1" />
      <production-bonus goods-type="model.goods.Cigars" bonus="-1" />
      <production-bonus goods-type="model.goods.Cloth" bonus="-1" />
      <production-bonus goods-type="model.goods.Coats" bonus="-1" />
      <production-bonus goods-type="model.goods.Muskets" bonus="-1" />
      <production-bonus goods-type="model.goods.Bells" bonus="-1" />
      <production-bonus goods-type="model.goods.Crosses" bonus="-1" />
      <production-bonus goods-type="model.goods.Hammers" bonus="-1" />
      <production-bonus goods-type="model.goods.Tools" bonus="-1" />
    </unit-type>
    <unit-type name="model.unit.pettyCriminal"        offence="0"  defence="1" movement="3" lineOfSight="1"               
               skill="-2" recruitProbability="20" promotion="model.unit.indenturedServant" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <upgrade unit="model.unit.indenturedServant" turnsToLearn="4"/>
      <upgrade unit="model.unit.seasonedScout" learnInLostCity="yes"/>
      <production-bonus goods-type="model.goods.Rum" bonus="-2" />
      <production-bonus goods-type="model.goods.Cigars" bonus="-2" />
      <production-bonus goods-type="model.goods.Cloth" bonus="-2" />
      <production-bonus goods-type="model.goods.Coats" bonus="-2" />
      <production-bonus goods-type="model.goods.Muskets" bonus="-2" />
      <production-bonus goods-type="model.goods.Bells" bonus="-2" />
      <production-bonus goods-type="model.goods.Crosses" bonus="-2" />
      <production-bonus goods-type="model.goods.Hammers" bonus="-2" />
      <production-bonus goods-type="model.goods.Tools" bonus="-2" />
    </unit-type>
    <unit-type name="model.unit.indianConvert"        offence="0"  defence="1" movement="3" lineOfSight="1"               
               skill="0" pathImage="foot">
      <ability id="model.ability.convert" value="yes"/>
      <production-bonus goods-type="model.goods.Food" bonus="1"/>
      <production-bonus goods-type="model.goods.Sugar" bonus="1"/>
      <production-bonus goods-type="model.goods.Tobacco" bonus="1"/>
      <production-bonus goods-type="model.goods.Cotton" bonus="1"/>
      <production-bonus goods-type="model.goods.Furs" bonus="1"/>
      <production-bonus goods-type="model.goods.Fish" bonus="1" />
      <production-bonus goods-type="model.goods.Rum" bonus="-2" />
      <production-bonus goods-type="model.goods.Cigars" bonus="-2" />
      <production-bonus goods-type="model.goods.Cloth" bonus="-2" />
      <production-bonus goods-type="model.goods.Coats" bonus="-2" />
      <production-bonus goods-type="model.goods.Muskets" bonus="-2" />
      <production-bonus goods-type="model.goods.Bells" bonus="-2" />
      <production-bonus goods-type="model.goods.Crosses" bonus="-2" />
      <production-bonus goods-type="model.goods.Hammers" bonus="-2" />
      <production-bonus goods-type="model.goods.Tools" bonus="-2" />
    </unit-type>
    <unit-type name="model.unit.brave"                offence="1"  defence="1" movement="3" lineOfSight="1" space="1">
      <ability id="model.ability.carryGoods" value="yes"/>
      <ability id="model.ability.bornInIndianSettlement" value="yes"/>
      <ability id="model.ability.pillageUnprotectedColony" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.colonialRegular"      offence="3"  defence="3" movement="3" lineOfSight="1"
               clearSpeciality="model.unit.freeColonist" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <required-ability id="model.ability.independenceDeclared"/>
    </unit-type>
    <unit-type name="model.unit.kingsRegular"         offence="4"  defence="4" movement="3" lineOfSight="1"
               clearSpeciality="model.unit.freeColonist">
      <ability id="model.ability.foundColony" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.caravel"              offence="0"  defence="2"  movement="12" lineOfSight="1" space="2"
               hitPoints="6" price="1000" hammers="128" tools="40" pathImage="naval">
      <ability id="model.ability.navalUnit" value="yes"/>
      <ability id="model.ability.carryGoods" value="yes"/>
      <ability id="model.ability.carryUnits" value="yes"/>
      <required-id id="model.building.shipyard"/>
    </unit-type>
    <unit-type name="model.unit.frigate"              offence="16" defence="16" movement="18" lineOfSight="2" space="4"
               hitPoints="6" price="5000" hammers="512" tools="200" pathImage="naval">
      <ability id="model.ability.navalUnit" value="yes"/>
      <ability id="model.ability.carryGoods" value="yes"/>
      <ability id="model.ability.carryUnits" value="yes"/>
      <ability id="model.ability.captureGoods" value="yes"/>
      <required-id id="model.building.shipyard"/>
    </unit-type>
    <unit-type name="model.unit.galleon"              offence="0"  defence="10" movement="18" lineOfSight="2" space="6"
               hitPoints="6" price="3000" hammers="320" tools="100" pathImage="naval">
      <ability id="model.ability.navalUnit" value="yes"/>
      <ability id="model.ability.carryGoods" value="yes"/>
      <ability id="model.ability.carryUnits" value="yes"/>
      <required-id id="model.building.shipyard"/>
    </unit-type>
    <unit-type name="model.unit.manOWar"              offence="24" defence="24" movement="18" lineOfSight="2" space="6"
               hitPoints="6" hammers="1024" tools="300" pathImage="naval">
      <ability id="model.ability.navalUnit" value="yes"/>
      <ability id="model.ability.carryGoods" value="yes"/>
      <ability id="model.ability.carryUnits" value="yes"/>
      <ability id="model.ability.captureGoods" value="yes"/>
      <required-id id="model.building.shipyard"/>
      <required-ability id="model.ability.independence"/>
    </unit-type>
    <unit-type name="model.unit.merchantman"          offence="0"  defence="6" movement="15" lineOfSight="1" space="4"
               hitPoints="6" price="2000" hammers="192" tools="80" pathImage="naval">
      <ability id="model.ability.navalUnit" value="yes"/>
      <ability id="model.ability.carryGoods" value="yes"/>
      <ability id="model.ability.carryUnits" value="yes"/>
      <required-id id="model.building.shipyard"/>
    </unit-type>
    <unit-type name="model.unit.privateer"            offence="8"  defence="8" movement="24" lineOfSight="2" space="2"
               hitPoints="6" price="2000" hammers="256" tools="120" pathImage="naval">
      <ability id="model.ability.navalUnit" value="yes"/>
      <ability id="model.ability.carryGoods" value="yes"/>
      <ability id="model.ability.carryUnits" value="yes"/>
      <ability id="model.ability.captureGoods" value="yes"/>
      <ability id="model.ability.piracy" value="yes"/>
      <required-id id="model.building.shipyard"/>
    </unit-type>
    <unit-type name="model.unit.artillery"            offence="7"  defence="5" movement="3" lineOfSight="1"
               hammers="192" tools="40" price="500" increasingPrice="100" pathImage="wagon">
      <ability id="model.ability.bombard" value="yes"/>
      <required-id id="model.building.armory"/>
    </unit-type>
    <unit-type name="model.unit.damagedArtillery"     offence="5"  defence="3" movement="3" lineOfSight="1" pathImage="wagon">
      <ability id="model.ability.bombard" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.treasureTrain"        offence="0"  defence="0" movement="3" lineOfSight="1" spaceTaken="6" pathImage="wagon">
      <ability id="model.ability.carryTreasure" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.wagonTrain"           offence="0"  defence="1" movement="6" lineOfSight="1" space="2"
               hammers="40" tools="0" pathImage="wagon">
      <ability id="model.ability.carryGoods" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.milkmaid"             offence="0"  defence="1" movement="3"  lineOfSight="1" expert-production="food" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.revenger"             offence="666"  defence="666" movement="18" lineOfSight="3" pathImage="foot">
        <ability id="model.ability.undead" value="yes"/>
        <ability id="model.ability.multipleAttacks" value="yes"/>
    </unit-type>
    <unit-type name="model.unit.flyingDutchman"       offence="666"  defence="666" movement="36" lineOfSight="3" space="6" hitPoints="6" pathImage="naval">
      <ability id="model.ability.navalUnit" value="yes"/>
      <ability id="model.ability.carryGoods" value="yes"/>
      <ability id="model.ability.carryUnits" value="yes"/>
      <ability id="model.ability.captureGoods" value="yes"/>
      <ability id="model.ability.undead" value="yes"/>
    </unit-type>    
    <unit-type name="model.unit.undead"               offence="18"  defence="4" movement="3" lineOfSight="1" pathImage="foot">
      <ability id="model.ability.foundColony" value="yes"/>
      <ability id="model.ability.undead" value="yes"/>
    </unit-type>
  </unit-types>

  <founding-fathers>
    <founding-father id="model.foundingFather.adamSmith" type="trade"
                     weight1="2" weight2="8" weight3="6">
      <ability id="model.ability.buildFactory" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.jacobFugger" type="trade"
                     weight1="0" weight2="5" weight3="8">
      <event id="model.event.boycottsLifted"/>
    </founding-father>
    <founding-father id="model.foundingFather.peterMinuit" type="trade"
                     weight1="9" weight2="1" weight3="1">
<!-- Player saves 100% percent, i.e. pays nothing. -->
      <bonus id="model.bonus.landPaymentBonus" type="percentage" value="-100"/>
    </founding-father>
    <founding-father id="model.foundingFather.peterStuyvesant" type="trade"
                     weight1="2" weight2="4" weight3="8">
      <ability id="model.ability.buildCustomHouse" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.janDeWitt" type="trade"
                     weight1="2" weight2="6" weight3="10">
      <ability id="model.ability.tradeWithForeignColonies" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.ferdinandMagellan" type="exploration"
                     weight1="2" weight2="10" weight3="10">
      <modify-type>
        <requirements>
          <required-ability id="model.ability.navalUnit" value="yes"/>
        </requirements>
        <modifications>
          <attribute id="movement" value="1" increment="yes"/>
        </modifications>
      </modify-type>
    </founding-father>
    <founding-father id="model.foundingFather.fransiscoDeCoronado" type="exploration"
                     weight1="3" weight2="5" weight3="7">
      <ability id="model.ability.seeAllColonies" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.hernandoDeSoto" type="exploration"
                     weight1="5" weight2="10" weight3="5">
      <modify-type>
        <requirements>
          <required-ability id="model.ability.navalUnit" value="no"/>
        </requirements>
        <modifications>
          <attribute id="lineOfSight" value="1" increment="yes"/>
        </modifications>
      </modify-type>
      <ability id="model.ability.rumoursAlwaysPositive" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.henryHudson" type="exploration"
                     weight1="10" weight2="1" weight3="1">
      <production-bonus goods-type="model.goods.furs" type="percentage" value="100"/>
    </founding-father>
    <founding-father id="model.foundingFather.laSalle" type="exploration"
                     weight1="7" weight2="5" weight3="3">
      <event id="model.event.freeBuilding" value="model.building.stockade"/>
      <modify-type>
        <requirements>
          <required-id id="model.building.stockade"/>
        </requirements>
        <modifications>
          <required-goods goods-type="model.goods.hammers" value="0"/>
        </modifications>
      </modify-type>
    </founding-father>
    <founding-father id="model.foundingFather.hernanCortes" type="military"
                     weight1="6" weight2="5" weight3="1">
      <bonus id="model.bonus.nativeTreasureBonus" type="percentage" value="200"/>
      <bonus id="model.bonus.treasureTransportFee" type="percentage" value="-100"/>
    </founding-father>
    <founding-father id="model.foundingFather.georgeWashington" type="military"
                     weight1="0" weight2="4" weight3="10">
      <ability id="model.ability.automaticPromotion" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.paulRevere" type="military"
                     weight1="10" weight2="2" weight3="1">
      <ability id="model.ability.automaticDefense" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.francisDrake" type="military"
                     weight1="4" weight2="8" weight3="6">
      <modify-type>
        <requirements>
          <required-id id="model.unit.privateer"/>
        </requirements>
        <modifications>
          <offense-bonus id="model.bonus.francisDrake" type="percentage" value="50"/>
        </modifications>
      </modify-type>
    </founding-father>
    <founding-father id="model.foundingFather.johnPaulJones" type="military"
                     weight1="0" weight2="6" weight3="7">
      <unit id="model.unit.frigate"/>
    </founding-father>
    <founding-father id="model.foundingFather.thomasJefferson" type="political"
                     weight1="4" weight2="5" weight3="6">
      <production-bonus goods-type="model.goods.bells" type="percentage" value="50"/>
    </founding-father>
    <founding-father id="model.foundingFather.pocahontas" type="political"
                     weight1="7" weight2="5" weight3="3">
      <bonus id="model.bonus.nativeAlarmBonus" type="percentage" value="-50"/>
    </founding-father>
    <founding-father id="model.foundingFather.thomasPaine" type="political"
                     weight1="1" weight2="2" weight3="8">
      <ability id="model.ability.addTaxToBells" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.simonBolivar" type="political"
                     weight1="0" weight2="4" weight3="6">
      <event id="model.event.increaseSonsOfLiberty" value="20"/>
    </founding-father>
    <founding-father id="model.foundingFather.benjaminFranklin" type="political"
                     weight1="5" weight2="5" weight3="5">
      <ability id="model.ability.ignoreEuropeanWars" value="yes"/>
      <ability id="model.ability.alwaysOfferedPeace" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.williamBrewster" type="religious"
                     weight1="7" weight2="4" weight3="1">
      <modify-type>
        <requirements>
          <required-id id="model.unit.indenturedServant"/>
        </requirements>
        <modifications>
          <attribute id="recruitProbability" value="0"/>
        </modifications>
      </modify-type>
      <modify-type>
        <requirements>
          <required-id id="model.unit.pettyCriminal"/>
        </requirements>
        <modifications>
          <attribute id="recruitProbability" value="0"/>
        </modifications>
      </modify-type>
      <modify-type>
        <requirements>
          <required-id id="model.unit.freeColonist"/>
        </requirements>
        <modifications>
          <attribute id="recruitProbability" value="60"/>
        </modifications>
      </modify-type>
    </founding-father>
    <founding-father id="model.foundingFather.williamPenn" type="religious"
                     weight1="8" weight2="5" weight3="2">
      <production-bonus goods-type="model.goods.crosses" type="percentage" value="50"/>
    </founding-father>
    <founding-father id="model.foundingFather.fatherJeanDeBrebeuf" type="religious"
                     weight1="6" weight2="6" weight3="1">
      <modify-type>
        <requirements>
          <required-id id="model.role.missionary"/>
        </requirements>
        <modifications>
          <ability id="model.ability.expertMissionary" value="yes"/>
        </modifications>
      </modify-type>
    </founding-father>
    <founding-father id="model.foundingFather.juanDeSepulveda" type="religious"
                     weight1="3" weight2="8" weight3="3">
      <ability id="model.ability.nativeConvertBonus" value="yes"/>
    </founding-father>
    <founding-father id="model.foundingFather.bartolmeDeLasCasas" type="religious"
                     weight1="0" weight2="5" weight3="10">
      <event id="model.event.nativesConvert"/>
    </founding-father>
  </founding-fathers>

</freecol-specification>
