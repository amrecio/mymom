<?xml version="1.0"?>

<!-- This file includes targets for building FreeCol,
     the metaserver, distribution packages, running tests
     and creating documentation. -->
<project name="FreeCol" default="package">
    <description>
        This file includes targets for building FreeCol,
        the metaserver, distribution packages, running tests
        and creating documentation.
    </description>

    <property name="freecol.name" value="freecol"/>
    <property environment="env"/>  
    <property name="freecol.data.dir" value="${basedir}/data"/>
    <property name="freecol.src.dir" value="${basedir}/src"/>
    <property name="freecol.build.dir" value="${basedir}/build"/>
    <property name="freecol.packaging.dir" value="${basedir}/packaging"/>
    <property name="freecol.release.dir" value="${basedir}/dist"/>
    <property name="freecol.doc.dir" value="${basedir}/doc"/>
    <property name="freecol.javadoc.dir" value="${freecol.doc.dir}/javadoc"/>
    <property name="freecol.jar.file" value="${basedir}/FreeCol.jar"/>
    <property name="freecol.metaserver.jar.file" value="${basedir}/FreeCol-metaserver.jar"/>
    <property name="freecol.overview.file" value="${freecol.src.dir}/overview.html"/>
	<property name="test" value="AllTests"/>

    <path id="test.class.path">
        <fileset dir="test/lib" includes="*.jar" />
        <fileset dir="${basedir}/jars/" includes="*.jar" />
    </path>
    <condition property="isOsUnixLike">
        <os family="unix" />
    </condition>

    <condition property="isOsWindows">
            <os family="windows" />
    </condition>
    <condition property="isOsMac">
        <os family="mac" />
    </condition>

    <condition property="isNotMacOrWindows">
        <not>
            <or>
                <isset property="isOsWindows" />
                <isset property="isOsMac" />
            </or>
        </not>
    </condition>


    <target name="define-jsmoothgen">
        <taskdef name="jsmoothgen"
                classname="net.charabia.jsmoothgen.ant.JSmoothGen"
                classpath="${freecol.build.dir}/jars/jsmoothgen-ant.jar"
        />
    </target>

    <target name="init" unless="TSTAMP">
        <tstamp/>
    </target>

    <!-- Compiles the java source files. -->
    <target name="compile" depends="init">
        <mkdir dir="${freecol.build.dir}"/>
        <javac srcdir="${freecol.src.dir}"
            destdir="${freecol.build.dir}"
            classpath="${basedir}/jars/higlayout.jar:${basedir}/jars/jsr173_1.0_api.jar:${basedir}/jars/wstx-lgpl-4.0pr1.jar"
            debug="on"
            optimize="on"
            deprecation="off"
            source="1.5"
        />
    </target>

    <target name="compile-test" depends="init">
        <mkdir dir="${freecol.build.dir}"/>
        <javac srcdir="test/src"
            destdir="${freecol.build.dir}"
            classpath="test/lib/junit.jar:${basedir}/jars/higlayout.jar:${basedir}/jars/jsr173_1.0_api.jar:${basedir}/jars/wstx-lgpl-4.0pr1.jar"
            debug="on"
            optimize="on"
            deprecation="off"
            source="1.5"
        />
    </target>

    <target name="reencode_messages" description="Reencodes the message files and outputs them to data/strings">
    
        <native2ascii src="${freecol.src.dir}/net/sf/freecol/client/gui/i18n" dest="${freecol.data.dir}/strings"
                    encoding="UTF-8" 
                    includes="*.properties" 
                    excludes="*_br.properties
                              *_de.properties
                              *_hu.properties
                              *_pt_BR.properties
                              *_pt_PT.properties
                              *_sv_SE.properties"/>
        <native2ascii src="${freecol.src.dir}/net/sf/freecol/client/gui/i18n" dest="${freecol.data.dir}/strings"
                    encoding="ISO-8859-1"
                    includes="*_br.properties
                              *_de.properties
                              *_hu.properties
                              *_pt_BR.properties
                              *_pt_PT.properties
                              *_sv_SE.properties"/>
    </target>

    <target name="build" depends="init,compile,reencode_messages" description="Compiles the source files.">
        <copy todir="${freecol.build.dir}">
        <fileset dir="${freecol.src.dir}" includes="**/*.xml" />
        </copy>
    </target>


    <!-- Compiles the source files and creates a JAR-file. -->
    <target name="package" depends="init,build" description="Compiles the source files and creates a JAR-file.">
        <jar jarfile="${freecol.jar.file}"
            basedir="${freecol.build.dir}"
            manifest="${basedir}/src/MANIFEST.MF"
            includes="net/**, org/**"
            excludes="**/CVS/**, **/metaserver/**"
        />
    </target>


    <!-- Compiles the metaserver and creates a JAR-file. -->
    <target name="metaserver" depends="init,build" description="Compiles the metaserver and creates a JAR-file.">
        <jar jarfile="${freecol.metaserver.jar.file}"
            basedir="${freecol.build.dir}"
            manifest="${basedir}/src/MANIFEST.MF"
            includes="net/**, org/**"
            excludes="**/CVS/**"
        />
    </target>

    <target name="mydist" depends="mydistWindows,mydistMac,mydistJava"
            description="Creates a distribution package for the current system." />
    <target name="mydistWindows" if="isOsWindows">
        <antcall target="winInstallerBundle"/>
    </target>
    <target name="mydistMac" if="isOsMac">
        <antcall target="tarMacJavaBundle"/>
    </target>
    <target name="mydistJava" if="isNotMacOrWindows">
        <antcall target="javaInstallerBundle"/>
    </target>

    <!--
        Creates archives and installers for distribution and places these in the
        "dist" directory.
        Various platforms can be omitted for prerelease testing by setting properties on the command line:
        skip.dist.mac="true" suppresses mac packaging
        skip.dist.installer="true" suppresses creation of installers
        skip.dist.java="true" suppresses zip and tar creation of the jarfiles
        skip.dist.source="true" suppresses packaging the source files

        For a formal release, none of these properties should be set.
    -->
    <target name="dist" description="Creates archives and installers for distribution." 
            depends="init,initDist,tarJavaBundle,zipJavaBundle,tarSourceBundle,zipSourceBundle,javaInstallerBundle,winInstallerBundle,tarMacJavaBundle">

        <echo message="" />
        <echo message="-------------------------------------------------"/>
        <echo message="Distribution files created:"/>
        <echo message="${freecol.release.dir}"/>
        <echo message="-------------------------------------------------"/>
    </target>

    <target name="initDist" depends="init,setReleaseVersion">
        <mkdir dir="${freecol.release.dir}"/>
    </target>

    <target name="setReleaseVersion" unless="freecol.version">
        <input message="Please specify the release version (default: cvs-${DSTAMP}): " addproperty="freecol.version" defaultvalue="cvs-${DSTAMP}" />
        <property name="freecol.release.name" value="${freecol.name}-${freecol.version}"/>  
        <echo message="Creating Distribution of ${freecol.release.name}"/>
        <replaceregexp file="${freecol.src.dir}/net/sf/freecol/FreeCol.java"
                       match="FREECOL_VERSION\s*=\s*&quot;(.*?)&quot;\;"
                       replace="FREECOL_VERSION = &quot;${freecol.version}&quot;\;"
                       />
        <echo message="Game version updated in FreeCol.java" />
    </target>

    <target name="prepareManual" depends="initDist,print-manual">
        <mkdir dir="${freecol.release.dir}/manual/${freecol.name}"/>
        <copy todir="${freecol.release.dir}/manual/${freecol.name}">
            <fileset dir="${freecol.doc.dir}" includes="FreeCol.pdf"/>
        </copy>
    </target>

    <target name="prepareBaseFiles" depends="initDist">
        <antcall target="clean"/>
        <antcall target="package"/>
        <mkdir dir="${freecol.release.dir}/base/${freecol.name}"/>
        <copy todir="${freecol.release.dir}/base/${freecol.name}">
            <fileset dir="${basedir}" includes="FreeCol.jar"/>
            <fileset dir="${freecol.packaging.dir}/common" includes="COPYING"/>
            <fileset dir="${freecol.packaging.dir}/common" includes="README"/>
            <fileset dir="${freecol.packaging.dir}/common" includes="freecol"/>
            <fileset dir="${freecol.packaging.dir}/common" includes="freecol.xpm"/>
            <fileset dir="${basedir}" includes="data/**" excludes="**/CVS/**"/>
            <fileset dir="${basedir}" includes="jars/**" excludes="**/CVS/**"/>
        </copy>
    </target>

    <target name="prepareSourceFiles" depends="initDist">
        <antcall target="clean"/>
        <mkdir dir="${freecol.release.dir}/source/${freecol.name}"/>
        <copy todir="${freecol.release.dir}/source/${freecol.name}">
            <fileset dir="${basedir}" excludes="**/CVS/**,dist/**,data/**,jars/**"/>
        </copy>
    </target>

    <target name="prepareWinFiles" depends="initDist,define-jsmoothgen">
        <jsmoothgen project="${freecol.build.dir}/startup.jsmooth" skeletonroot="${freecol.build.dir}/skeletons"/>
        <move todir="${freecol.release.dir}/win/${freecol.name}">
            <fileset dir="${freecol.build.dir}" includes="freecol.exe"/>
        </move>
        <mkdir dir="${freecol.release.dir}/win/${freecol.name}/Uninstaller"/>
        <jsmoothgen project="${freecol.build.dir}/uninstaller.jsmooth" skeletonroot="${freecol.build.dir}/skeletons"/>
        <move todir="${freecol.release.dir}/win/${freecol.name}/Uninstaller">
            <fileset dir="${freecol.build.dir}" includes="uninstaller.exe"/>
        </move>
    </target>

    <target name="tarJavaBundle" unless="skip.dist.java" depends="initDist,prepareManual,prepareBaseFiles">
        <tar destfile="${freecol.release.dir}/${freecol.release.name}.tar.gz" compression="gzip">
            <tarfileset dir="${freecol.release.dir}/base" includes="${freecol.name}/**"/>
            <tarfileset dir="${freecol.release.dir}/manual" includes="${freecol.name}/**"/>
        </tar>
    </target>

    <target name="zipJavaBundle" unless="skip.dist.java" depends="initDist,prepareManual,prepareBaseFiles">
        <zip destfile="${freecol.release.dir}/${freecol.release.name}.zip">
            <fileset dir="${freecol.release.dir}/base" includes="${freecol.name}/**"/>
            <fileset dir="${freecol.release.dir}/manual" includes="${freecol.name}/**"/>
        </zip>
    </target>

    <target name="tarSourceBundle" unless="skip.dist.source" depends="initDist,prepareSourceFiles">
        <tar destfile="${freecol.release.dir}/${freecol.release.name}-src.tar.gz" compression="gzip">
            <tarfileset dir="${freecol.release.dir}/base" includes="${freecol.name}/**"/>
            <tarfileset dir="${freecol.release.dir}/source" includes="${freecol.name}/**"/>
        </tar>
    </target>

    <target name="zipSourceBundle" unless="skip.dist.source" depends="initDist,prepareSourceFiles">
        <zip destfile="${freecol.release.dir}/${freecol.release.name}-src.zip">
            <fileset dir="${freecol.release.dir}/base" includes="${freecol.name}/**"/>
            <fileset dir="${freecol.release.dir}/source" includes="${freecol.name}/**"/>
        </zip>
    </target>

    <target name="javaInstallerBundle" unless="skip.dist.installer" description="Builds a platform independent installer"
			depends="initDist,prepareWinFiles,prepareManual,prepareBaseFiles,prepareSourceFiles">
	    <taskdef name="izpack"
                classname="com.izforge.izpack.ant.IzPackTask"
                classpath="${freecol.build.dir}/jars/standalone-compiler.jar"
        />

        <izpack output="${freecol.release.dir}/${freecol.release.name}-installer.jar"
                installerType="standard" 
                basedir="${freecol.release.dir}/"
                izpackdir="${freecol.build.dir}">
            <config><![CDATA[
                <installation version="1.0">
                    <info>
                        <appname>FreeCol</appname>
                        <appversion>@{freecol.version}</appversion>
                        <appsubpath>freecol</appsubpath>
                        <url>http://www.freecol.org</url>
                        <authors>
                            <author name="The FreeCol Team" email="developers@freecol.org" />
                        </authors>
                        <javaversion>1.5</javaversion>
                    </info>
                    <guiprefs width="640" height="480" resizable="no">
                        <laf name="looks">
                            <os family="unix" />
                        </laf>
                        <modifier key="langDisplayType" value="native"/>
                    </guiprefs>
                    <locale>
                        <langpack iso3="eng"/>
                        <langpack iso3="deu"/>
                        <langpack iso3="fin"/>
                        <langpack iso3="fra"/>
                        <langpack iso3="hun"/>
                        <langpack iso3="ita"/>
                        <langpack iso3="ned"/>
                        <langpack iso3="pol"/>
                        <langpack iso3="por"/>
                        <langpack iso3="rus"/>
                        <langpack iso3="spa"/>
                        <langpack iso3="swe"/>
                    </locale>
                    <resources>
                        <res id="LicencePanel.licence" src="base/@{freecol.name}/COPYING"/>
                        <res id="shortcutSpec.xml" src="@{freecol.build.dir}/winShortcutSpec.xml"/>
                        <res id="Unix_shortcutSpec.xml" src="@{freecol.build.dir}/unixShortcutSpec.xml"/>
                        <res id="installer.langsel.img" src="@{freecol.build.dir}/install.png"/>
                        <res id="packsLang.xml_eng" src="@{freecol.build.dir}/installer/lang.xml_eng"/>
                        <res id="packsLang.xml_ned" src="@{freecol.build.dir}/installer/lang.xml_ned"/>
                        <res id="packsLang.xml_spa" src="@{freecol.build.dir}/installer/lang.xml_spa"/>
                        <res id="packsLang.xml_deu" src="@{freecol.build.dir}/installer/lang.xml_deu"/>
                        <res id="packsLang.xml_fra" src="@{freecol.build.dir}/installer/lang.xml_fra"/>
                    </resources>
                    <native type="izpack" name="ShellLink.dll"/>
                    <panels>
                        <panel classname="HelloPanel"/>
                        <panel classname="LicencePanel"/>
                        <panel classname="TargetPanel"/>
                        <panel classname="PacksPanel"/>
                        <panel classname="InstallPanel"/>
                        <panel classname="ShortcutPanel"/>
                        <panel classname="SimpleFinishPanel"/>
                    </panels>
                    <packs>
                        <pack id="FreeCol" name="FreeCol" required="yes">
                            <description>The FreeCol application and data files. This pack includes all files required to play the game.</description>
                            <fileset dir="base/@{freecol.name}" targetdir="$INSTALL_PATH"/>
                            <fileset dir="@{freecol.packaging.dir}/common/" includes="Uninstaller/**" targetdir="$INSTALL_PATH"/>
                            <fileset dir="win/@{freecol.name}" targetdir="$INSTALL_PATH" os="windows"/>
                            <executable targetfile="$INSTALL_PATH/freecol" stage="never" keep="true" />
                            <executable targetfile="$INSTALL_PATH/Uninstaller/uninstaller" stage="never" keep="true" />
                        </pack>
                        <pack id="GameManual" name="Game Manual" required="no" preselected="yes">
                            <description>This pack includes the game manual.</description>
                            <fileset dir="manual/@{freecol.name}" targetdir="$INSTALL_PATH"/>
                        </pack>
                        <!--
                        <pack id="SourceCode" name="Source Code" required="no" preselected="no">
                            <description>The source code used for building this distribution. These files are intended for developers and give no extra functionality to normal users.</description>
                            <fileset dir="source/@{freecol.name}" targetdir="$INSTALL_PATH"/>
                        </pack>
                        -->
                    </packs>
                </installation>
            ]]></config>
        </izpack>
    </target>

    <target name="winInstallerBundle" unless="skip.dist.installer" description="Builds a windows installer"
            depends="initDist,javaInstallerBundle,define-jsmoothgen">

        <copy todir="${freecol.release.dir}">
            <fileset dir="${freecol.build.dir}" includes="installer.jsmooth"/>
        </copy>
        <replace file="${freecol.release.dir}/installer.jsmooth" 
                token="%ant:freecol.release.name%"
                value="${freecol.release.name}"
        />
        <replace file="${freecol.release.dir}/installer.jsmooth" 
                token="%ant:freecol.installerjar%"
                value="${freecol.release.dir}/${freecol.release.name}-installer.jar"
        />
        <jsmoothgen project="${freecol.release.dir}/installer.jsmooth" skeletonroot="${freecol.build.dir}/skeletons"/>
    </target>

    <!-- Builds a doubleclickable application bundle running on Mac OS X -->
	<target name="macJavaBundle" unless="skip.dist.mac" depends="prepareManual,prepareBaseFiles">
        <!-- JarBundler is a feature-rich Ant task which will create a Mac OS X
             application bundle from a list of Jar files and a main class name.
             (GPL-Software) -> http://informagen.com/JarBundler/  -->
        <taskdef name="jarbundler" 
                classname="net.sourceforge.jarbundler.JarBundler" 
                classpath="${freecol.build.dir}/jars/jarbundler.jar"
        />

        <jarbundler dir="${freecol.release.dir}"
                            name="FreeCol"
                            mainclass="net.sf.freecol.FreeCol"
                            version="${freecol.version}"
                            vmoptions="-Xmx256M"
                            jvmversion="1.5+"
                            arguments="--windowed --freecol-data FreeCol.app/Contents/Resources/"
                            stubfile="${freecol.build.dir}/skeletons/FreeCol"
                            icon="${freecol.packaging.dir}/icons/FreeCol.icns"> 
            <jarfileset dir="${freecol.release.dir}/base/freecol/">
                <include name="**/*" />
                <exclude name="data/**" />
	    </jarfileset>
            <resourcefileset dir="${freecol.release.dir}/base/freecol/data" />
        </jarbundler>
    </target>

    <target name="tarMacJavaBundle" unless="skip.dist.mac" depends="tarMacJavaBundleOnUnixLike,tarMacJavaBundleOnWindows" description="Creates a Mac OS X application bundle inside a tar file.">
    </target>

    <target name="tarMacJavaBundleOnUnixLike" unless="skip.dist.mac" if="isOsUnixLike" depends="macJavaBundle">
        <delete file="${freecol.release.dir}/FreeCol.app/Contents/MacOS/FreeCol"/>
        <symlink link="${freecol.release.dir}/FreeCol.app/Contents/MacOS/FreeCol" 	resource="/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub"/>
        <exec executable="tar">
            <arg value="cfvj"/>
            <arg value="${freecol.release.dir}/${freecol.release.name}-mac.tar.bz2"/>
            <arg value="-C"/>
            <arg value="${freecol.release.dir}"/>
            <arg value="FreeCol.app/"/>
        </exec>
    </target>

    <target name="tarMacJavaBundleOnWindows" depends="macJavaBundle" unless="skip.dist.mac" if="isOsWindows">
        <echo message="Warning: You are building a Mac Os X Java Application Bundle containing a Copy Java Application Stub. Creating a bundle with the current copy of Java Launching Stub could lead to a future situation where the JavaApplicationStub file could become incompatible with a future OS X update. To avoid this, use a unix like system ... "/>
        <tar destfile="${freecol.release.dir}/${freecol.release.name}-mac.tar.bz2" compression="bzip2">
            <tarfileset dir="${freecol.release.dir}" mode="755" 
                    includes="FreeCol.app/Contents/MacOS/FreeCol" 
                    excludes="**/freecol*"
                    followsymlinks="false" 
            />
            <tarfileset followsymlinks="false" dir="${freecol.release.dir}">
                <include name="FreeCol.app/**"/>
                <exclude name="**/freecol*"/>
                <exclude name="FreeCol.app/Contents/MacOS/FreeCol"/>
            </tarfileset>	
        </tar>
    </target>

    <!-- Cleans the directories by removing auto-generated files. -->
    <target name="clean" depends="init" description="Cleans the directories by removing auto-generated files.">
        <delete quiet="true" includeEmptyDirs="true">
            <fileset dir="${freecol.build.dir}" includes="net/**" />
            <fileset dir="${freecol.build.dir}" includes="timestamp.inf" />
        	<fileset dir="${freecol.build.dir}" includes="report/**" />
        	<fileset dir="${freecol.build.dir}" includes="TEST-net.sf.freecol.*" />
            <fileset dir="${freecol.build.dir}" includes="dependencies.txt" />
        </delete>
    	<delete quiet="true" file="${freecol.jar.file}"/>
    	<delete quiet="true" file="TESTS-TestSuites.xml"/>
        <delete quiet="true" dir="${freecol.javadoc.dir}"/>
    	<delete quiet="true" file="Freecol.log"/>
    </target>

    <target name="distclean" depends="init,clean" description="Cleans the directories and removes the distribution directory.">
        <delete quiet="true" includeEmptyDirs="true">
            <fileset dir="${freecol.release.dir}" />
        </delete>
    </target>

    <target name="fix" depends="init">
        <fixcrlf srcdir="${freecol.src.dir}"
                includes="**/*.java"
                eol="asis"
                tab="remove"
                javafiles="yes"
                tablength="4"
                eof="asis"
        />
    </target>

    <!-- Generate JavaDoc documentation. -->
    <target name="javadoc" depends="init" description="Generate JavaDoc documentation.">
        <mkdir dir="${freecol.javadoc.dir}"/>
        <javadoc sourcepath="${freecol.src.dir}"
                overview="${freecol.overview.file}"
                destdir="${freecol.javadoc.dir}"
                packagenames="net.sf.freecol.*"
                private="true"
                classpath="${basedir}/jars/higlayout.jar:${basedir}/jars/jsr173_1.0_api.jar:${basedir}/jars/wstx-lgpl-4.0pr1.jar"
                Author="true"
                Windowtitle="FreeCol Code Documentation"
        />
        <echo message="" />
        <echo message="-------------------------------------------------"/>
        <echo message="JavaDoc-generated documentation created:"/>
        <echo message="${freecol.javadoc.dir}"/>
        <echo message="-------------------------------------------------"/>
    </target>


    <!-- example:
        ant -lib test/lib/junit.jar -Dtest=common.model.BuildingTest test
        -->
    <target name="test" depends="build-unit-tests"
            description="Runs a particular unit test"
    >
        <echo message="if the next task fails then please read the build script" />
        <!-- if the next fails then here is the long answer:
            http://ant.apache.org/faq.html#delegating-classloader
            the short answer depends.
            if you have Ant 1.7, the junit.jar can exist on the classpath.  
            upgrading to 1.7 may be the best solution.

            if you have Ant 1.6:
            ant -lib test/lib/junit.jar testall
            if you have a version of Ant prior to 1.6 on Windows:
            set CLASSPATH=%CLASSPATH%;test\lib\junit.jar
            ant testall
            if you have a version of Ant prior to 1.6 on UNIX:
            export CLASSPATH=${CLASSPATH}:test/lib/junit.jar; ant testall
            -->
        <junit printsummary="yes">
	        <classpath>
	            <pathelement location="${freecol.build.dir}" />
	            <pathelement location="test/lib/junit.jar" />
	            <pathelement location="${basedir}/jars/higlayout.jar" />
	            <pathelement location="${basedir}/jars/jsr173_1.0_api.jar" />
	            <pathelement location="${basedir}/jars/wstx-lgpl-4.0pr1.jar"/>
	        </classpath>
	       	<formatter type="brief" usefile="false" />
        	<formatter type="plain" /> 
        	<test todir="${freecol.build.dir}" name="net.sf.freecol.${test}" />
        </junit>
    	<echo message="For more detailed information about this test run see:"/>
    	<echo message="${freecol.build.dir}/TEST-net.sf.freecol.${test}.txt"/>
    </target>

    <target name="testall" depends="build-unit-tests" unless="skip.dist.test"
            description="Runs all unit tests"
    >
        <echo message="if the next task fails then please read the build script" />
        <!-- if the next fails then here is the long answer:
            http://ant.apache.org/faq.html#delegating-classloader
            the short answer depends.
            if you have Ant 1.7, the junit.jar can exist on the classpath.  
            upgrading to 1.7 may be the best solution.

            if you have Ant 1.6:
            ant -lib test/lib/junit.jar testall
            if you have a version of Ant prior to 1.6 on Windows:
            set CLASSPATH=%CLASSPATH%;test\lib\junit.jar
            ant testall
            if you have a version of Ant prior to 1.6 on UNIX:
            export CLASSPATH=${CLASSPATH}:test/lib/junit.jar; ant testall
            -->
        <junit printsummary="on" errorproperty="error.junit">
            <classpath>
                <pathelement location="${freecol.build.dir}" />
                <pathelement location="test/lib/junit.jar" />
                <pathelement location="${basedir}/jars/higlayout.jar" />
                <pathelement location="${basedir}/jars/jsr173_1.0_api.jar" />
                <pathelement location="${basedir}/jars/wstx-lgpl-4.0pr1.jar"/>
            </classpath>
            <formatter type="xml" />
            <batchtest fork="false" todir="${freecol.build.dir}">
                <fileset dir="test/src" includes="**/*Test.java" />
            </batchtest>
        </junit>
        <delete dir="build/report" />
        <mkdir dir="build/report"/>
        <echo message="Basedir:${basedir}"/>
        <junitreport>
            <fileset dir="build">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="build/report" />
        </junitreport>

        <fail if="error.junit">
            Automated Unit Tests failed.
        </fail>
    </target>

    <target name="build-unit-tests" depends="build">
        <depend srcDir="test/src" destDir="${freecol.build.dir}"
                cache="${freecol.build.dir}" />
        <javac srcdir="test/src" destdir="${freecol.build.dir}"
            classpathref="test.class.path" debug="on" deprecation="off"
            source="1.5" />
    </target>

    <target name="print-manual"
            description="Creates the printable user guide.">
        <delete file="doc/FreeCol.ind" />
        <exec executable="pdflatex" dir="doc" >
            <arg file="doc/FreeCol.tex"/>
        </exec>
        <exec executable="makeindex" dir="doc" >
            <arg file="doc/FreeCol.idx"/>
        </exec>
        <exec executable="pdflatex" dir="doc" >
            <arg file="doc/FreeCol.tex"/>
        </exec>
    </target>

    <target name="online-manual"
            description="Creates the online user guide.">
        <delete file="doc/FreeCol.ind" />
        <exec executable="htlatex" dir="doc" >
            <arg file="doc/FreeCol.tex"/>
        </exec>
        <exec executable="tex" dir="doc">
            <arg line="\def\filename{{FreeCol}{idx}{4dx}{ind}} \input  idxmake.4ht" />
        </exec>
        <exec executable="makeindex" dir="doc" >
            <arg file="doc/FreeCol.4dx"/>
        </exec>
        <exec executable="htlatex" dir="doc" >
            <arg file="doc/FreeCol.tex"/>
        </exec>
    </target>

    <target name="manual" depends="print-manual,online-manual" 
            description="Creates the printable and online user guides.">
    </target>

    <target name="fixTabsWindows">
        <fixcrlf srcdir="${freecol.src.dir}" tab="remove" tablength="4"
            includes="**/*.java" eol="crlf"
        />
    </target>

    <target name="fixTabsUnix">
        <fixcrlf srcdir="${freecol.src.dir}" tab="remove" tablength="4"
            includes="**/*.java" eol="lf"
        />
    </target>

    <!-- Prints a report on certain translations, which you can specify
        by setting the localeKey property ("-DlocaleKey=fi", for example),
        or all translations. Use "-emacs" in order to suppress extensive
        logging.  --> 
    <target name="translation-report" depends="build"
            description="Creates report on translations.">
        <condition property="localeKey" else="">
            <isset property="localeKey" />
        </condition>
        <java classname="net.sf.freecol.tools.TranslationReport" classpath="build/" >
            <arg value="src/net/sf/freecol/client/gui/i18n/" />
            <arg value="${localeKey}" />
        </java>
    </target>
</project>
