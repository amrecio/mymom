<?xml version="1.0"?>

<project name="FreeCol" default="package">

  <property name="freecol.name" value="freecol"/>
  <property name="freecol.version" value="0.5.1"/>  
      
  <property environment="env"/>  
  <property name="freecol.release.name" value="${freecol.name}-${freecol.version}"/>  
  <property name="freecol.data.dir" value="${basedir}/data"/>
  <property name="freecol.src.dir" value="${basedir}/src"/>
  <property name="freecol.build.dir" value="${basedir}/build"/>
  <property name="freecol.packaging.dir" value="${basedir}/packaging"/>
  <property name="freecol.release.dir" value="${basedir}/release"/>
  <property name="freecol.javadoc.dir" value="${basedir}/javadoc"/>
  <property name="freecol.jar.file" value="${basedir}/FreeCol.jar"/>
  <property name="freecol.overview.file" value="${freecol.src.dir}/overview.html"/>

  <path id="test.class.path">
    <fileset dir="test/lib" includes="*.jar" />
  </path>


  <target name="init" unless="TSTAMP">
    <tstamp/>
  </target>

  <target name="compile" depends="init">
    <mkdir dir="${freecol.build.dir}"/>
    <javac srcdir="${freecol.src.dir}"
           destdir="${freecol.build.dir}"
           classpath="${basedir}/jars/higlayout.jar"
           debug="on"
           optimize="on"
           deprecation="off"
           source="1.4"
    />
  </target>

  <target name="compile-test" depends="init">
    <mkdir dir="${freecol.build.dir}"/>
    <javac srcdir="test/src"
           destdir="${freecol.build.dir}"
           classpath="test/lib/junit.jar"
           debug="on"
           optimize="on"
           deprecation="off"
           source="1.4"
    />
  </target>

  <target name="copy-sound-files" depends="init" unless="nosound">
    <copy todir="${freecol.build.dir}/net/sf/freecol/data/audio">
      <fileset dir="${freecol.data.dir}/audio">
        <exclude name="**/CVS/**"/>
      </fileset>
    </copy>
  </target>

  <target name="copy-jar-files" depends="init" unless="nojars">
    <mkdir dir="${freecol.build.dir}/jars"/>
    <copy todir="${freecol.build.dir}/jars">
      <fileset dir="${basedir}/jars">
        <exclude name="**/CVS/**"/>
      </fileset>
    </copy>
  </target>

  <target name="copy-data-files" depends="init" unless="nodata">
    <!-- Copy the image files -->
    <copy todir="${freecol.build.dir}/net/sf/freecol/data/images">
      <fileset dir="${freecol.data.dir}/images">
        <exclude name="**/CVS/**"/>
      </fileset>
    </copy>

    <copy todir="${freecol.build.dir}/net/sf/freecol/data/fonts">
      <fileset dir="${freecol.data.dir}/fonts">
        <exclude name="**/CVS/**"/>
      </fileset>
    </copy>

    <!-- Copy the sound files unless the "nosound" property has been defined -->
    <antcall target="copy-sound-files"/>
  </target>

  <target name="build" depends="init,compile">
    <!-- Copy the data files unless the "nodata" property has been defined -->
    <antcall target="copy-data-files"/>

    <!-- Copy the jar files unless the "nojars" property has been defined -->
    <antcall target="copy-jar-files"/>

    <copy todir="${freecol.build.dir}">
      <fileset dir="${freecol.src.dir}" includes="**/*.xml" />
    </copy>

    <native2ascii src="${freecol.src.dir}" dest="${freecol.build.dir}"
                  encoding="UTF-8" includes="**/*.properties" excludes="classes/** **/*_de_DE.properties **/*_hu.properties" />
    <native2ascii src="${freecol.src.dir}" dest="${freecol.build.dir}"
                  encoding="ISO-8859-1" includes="**/*_de_DE.properties **/*_hu.properties" excludes="classes/**" />
  </target>

  <target name="package" depends="init,build">
    <jar jarfile="${freecol.jar.file}"
         basedir="${freecol.build.dir}"
         manifest="${basedir}/src/MANIFEST.MF"
         excludes="**/CVS/**, **/metaserver/**"
    />
  </target>

  <target name="fullpackage" depends="init,build">
    <jar jarfile="${freecol.jar.file}"
         basedir="${freecol.build.dir}"
         manifest="${basedir}/src/MANIFEST.MF"
         excludes="**/CVS/**"
    />
  </target>

  <target name="release" depends="clean">
    <property name="nodata" value="true"/>
    <property name="nosound" value="true"/>
    <property name="nojars" value="true"/>
    <antcall target="package"/>
    
    <mkdir dir="${freecol.release.dir}"/>
    <mkdir dir="${freecol.release.dir}/${freecol.name}"/>
        
    <copy todir="${freecol.release.dir}/${freecol.name}">
      <fileset dir="${basedir}" includes="FreeCol.jar"/>
      <fileset dir="${freecol.packaging.dir}/common" excludes="**/CVS/**"/>
      <fileset dir="${basedir}" includes="**/data/**" excludes="**/CVS/**"/>
      <fileset dir="${basedir}" includes="**/jars/**" excludes="/CVS/**"/>    
    </copy>
        
    <zip destfile="${freecol.release.dir}/${freecol.release.name}.zip">
      <fileset dir="${freecol.release.dir}" includes="${freecol.name}/**"/>
    </zip>    
    <tar destfile="${freecol.release.dir}/${freecol.release.name}.tar.gz" compression="gzip">
      <tarfileset dir="${freecol.release.dir}" includes="${freecol.name}/**"/>
    </tar>
    
    <copy todir="${freecol.release.dir}/${freecol.name}">
      <fileset dir="${basedir}" includes="src/**" excludes="**/CVS/**"/>
      <fileset dir="${basedir}" includes="build.xml" />
    </copy>
    
    <zip destfile="${freecol.release.dir}/${freecol.release.name}-src.zip">
      <fileset dir="${freecol.release.dir}" includes="${freecol.name}/**"/>
    </zip>    
    <tar destfile="${freecol.release.dir}/${freecol.release.name}-src.tar.gz" compression="gzip">
      <tarfileset dir="${freecol.release.dir}" includes="${freecol.name}/**"/>
    </tar>    
    
    <delete quiet="true" dir="${freecol.release.dir}/${freecol.name}"/>
  </target>

  <target name="clean" depends="init">
    <delete quiet="true" includeEmptyDirs="true">
      <fileset dir="${freecol.build.dir}" includes="net/**" />
      <fileset dir="${freecol.build.dir}" includes="timestamp.inf" />
      <fileset dir="${freecol.release.dir}" />
    </delete>
    <delete quiet="true" file="${freecol.jar.file}"/>
    <delete quiet="true" dir="${freecol.javadoc.dir}"/>
    <delete quiet="true" dir="${freecol.build.dir}"/>
  </target>

  <target name="fix" depends="init">
    <fixcrlf srcdir="${freecol.src.dir}"
             includes="**/*.java"
             eol="asis"
             tab="remove"
             javafiles="yes"
             tablength="4"
             eof="asis"
    />
  </target>

  <target name="javadoc" depends="init">
    <mkdir dir="${freecol.javadoc.dir}"/>
    <javadoc sourcepath="${freecol.src.dir}"
             overview="${freecol.overview.file}"
             destdir="${freecol.javadoc.dir}"
             packagenames="net.sf.freecol.*"
             classpath="${basedir}/jars/higlayout.jar"
             Author="true"
             Windowtitle="FreeCol Code Documentation"
    />
  </target>


  <!-- example:
       ant -lib test/lib/junit.jar -Dtest=common.model.Building test
       -->
  <target name="test" depends="build, build-unit-tests"
          description="runs a particular unit test"
  >
    <echo message="if the next task fails then please read the build script" />
    <!-- if the next fails then here is the long answer:
           http://ant.apache.org/faq.html#delegating-classloader
         the short answer depends.
         if you have Ant 1.6:
           ant -lib test/lib/junit.jar testall
         if you have a version of Ant prior to 1.6 on Windows:
           set CLASSPATH=%CLASSPATH%;test\lib\junit.jar
           ant testall
         if you have a version of Ant prior to 1.6 on UNIX:
           export CLASSPATH=${CLASSPATH}:test/lib/junit.jar; ant testall
         -->
    <junit printsummary="yes">
      <classpath>
        <pathelement location="${freecol.build.dir}" />
      </classpath>
      <formatter type="plain" />
      <test todir="${freecol.build.dir}" name="net.sf.freecol.${test}Test" />
    </junit>
  </target>


  <target name="testall" depends="build-unit-tests"
          description="runs all unit tests"
  >
    <echo message="if the next task fails then please read the build script" />
    <!-- if the next fails then here is the long answer:
           http://ant.apache.org/faq.html#delegating-classloader
         the short answer depends.
         if you have Ant 1.6:
           ant -lib test/lib/junit.jar testall
         if you have a version of Ant prior to 1.6 on Windows:
           set CLASSPATH=%CLASSPATH%;test\lib\junit.jar
           ant testall
         if you have a version of Ant prior to 1.6 on UNIX:
           export CLASSPATH=${CLASSPATH}:test/lib/junit.jar; ant testall
         -->
    <junit printsummary="yes">
      <classpath>
        <pathelement location="${freecol.build.dir}" />
      </classpath>
      <formatter type="plain" />
      <batchtest fork="yes" todir="${freecol.build.dir}">
        <fileset dir="test/src" includes="**/*Test.java" />
      </batchtest>
    </junit>
  </target>


  <target name="build-unit-tests" depends="build">

    <depend srcDir="test/src" destDir="${freecol.build.dir}"
            cache="${freecol.build.dir}" />

    <javac srcdir="test/src" destdir="${freecol.build.dir}"
           classpathref="test.class.path" debug="on" deprecation="off"
           source="1.4" />

  </target>

  <target name="print-manual">
    <exec executable="pdflatex" dir="doc" >
      <arg file="doc/FreeCol.tex"/>
    </exec>
    <!-- run twice to get references right -->
    <exec executable="pdflatex" dir="doc" >
      <arg file="doc/FreeCol.tex"/>
    </exec>
  </target>

  <target name="online-manual">
    <exec executable="htlatex" dir="doc" >
      <arg file="doc/FreeCol.tex"/>
    </exec>
  </target>

  <target name="manual" depends="print-manual,online-manual">
  </target>



</project>
